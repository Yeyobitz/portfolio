---
import type { Skill } from '../../types/cv';
import SkillCategory from './SkillCategory.astro';
import TerminalHeader from '../TerminalHeader.astro';

interface Props {
  skills: Skill[];
}

const { skills } = Astro.props;

// Group skills by primary keyword (category)
const groupedSkills = skills.reduce((acc, skill) => {
  const category = skill.keywords[0];
  if (!acc[category]) {
    acc[category] = [];
  }
  acc[category].push(skill);
  return acc;
}, {} as Record<string, Skill[]>);

// Sort categories by importance
const categoryOrder = [
  "Web development",
  "Databases",
  "Version control",
  "Game Development",
  "Design",
  "Development Tools"
];

const sortedCategories = Object.entries(groupedSkills).sort(([a], [b]) => {
  return categoryOrder.indexOf(a) - categoryOrder.indexOf(b);
});
---

<section class="skills-section crt" id="skills">
  <TerminalHeader title="SKILLS.EXE" />
  <div class="terminal-content">
    {sortedCategories.map(([category, categorySkills]) => (
      <SkillCategory category={category} skills={categorySkills} />
    ))}
  </div>
</section>

<style>
  .skills-section {
    margin: 4rem 0;
    background: var(--color-bg-secondary);
    border: 2px solid var(--color-accent-purple);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 0 30px rgba(var(--accent), 0.1);
  }

  .terminal-content {
    padding: 2rem;
  }

  @media (max-width: 768px) {
    .terminal-content {
      padding: 1rem;
    }
  }
</style>