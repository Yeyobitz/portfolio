---
interface Props {
  name: string;
  label: string;
  image: string;
}

const { name, label, image } = Astro.props;
---

<section class="hero">
  <div class="hero-background">
    <div class="grid"></div>
    <div class="gradient-overlay"></div>
  </div>
  
  <div class="hero-content">
    <div class="image-container">
      <img src={image} alt={name} class="hero-image" />
      <div class="glow-circle"></div>
    </div>
    <h1 class="glitch">{name}</h1>
    <p class="subtitle">{label}</p>
  </div>
</section>

<style>
  .hero {
    position: relative;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
  }

  .hero-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: 0;
  }

  .grid {
    position: absolute;
    width: 200%;
    height: 200%;
    bottom: -50%;
    left: -50%;
    background-image: 
      linear-gradient(90deg, var(--color-accent-blue) 1px, transparent 1px),
      linear-gradient(var(--color-accent-purple) 1px, transparent 1px);
    background-size: 4rem 4rem;
    transform: rotateX(60deg);
    transform-origin: center;
    animation: gridMove 20s linear infinite;
    opacity: 0.1;
  }

  .gradient-overlay {
    position: absolute;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      180deg,
      var(--color-bg-primary) 0%,
      transparent 20%,
      transparent 80%,
      var(--color-bg-primary) 100%
    );
    z-index: 1;
  }

  .hero-content {
    position: relative;
    z-index: 2;
    text-align: center;
    padding: 2rem;
  }

  .image-container {
    position: relative;
    width: 200px;
    height: 200px;
    margin: 0 auto 2rem;
  }

  .hero-image {
    position: relative;
    z-index: 2;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .glow-circle {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: var(--color-accent-blue);
    filter: blur(20px);
    opacity: 0.3;
    z-index: 1;
    animation: glowPulse 4s ease-in-out infinite;
  }

  .hero-image:hover {
    animation: rotate 3s linear infinite;
  }

  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  @keyframes glowPulse {
    0%, 100% {
      transform: scale(1);
      opacity: 0.3;
    }
    50% {
      transform: scale(1.1);
      opacity: 0.5;
    }
  }

  @keyframes gridMove {
    0% {
      transform: rotateX(60deg) translateY(0);
    }
    100% {
      transform: rotateX(60deg) translateY(4rem);
    }
  }

  h1 {
    font-size: 5rem;
    font-weight: 700;
    line-height: 1;
    margin-bottom: 0.5em;
    color: var(--color-accent-blue);
    text-shadow: var(--glow-blue);
  }

  .subtitle {
    font-size: 1.5rem;
    color: var(--color-accent-purple);
    text-shadow: var(--glow-purple);
  }

  @media (max-width: 768px) {
    h1 {
      font-size: 3rem;
    }

    .subtitle {
      font-size: 1.2rem;
    }
  }
</style>