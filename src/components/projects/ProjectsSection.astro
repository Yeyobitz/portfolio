---
import type { Project } from '../../types/cv';
import ProjectCard from './ProjectCard.astro';
import TerminalHeader from '../TerminalHeader.astro';

interface Props {
  projects: Project[];
}

const { projects } = Astro.props;

// Sort projects: active first, then by name
const sortedProjects = [...projects].sort((a, b) => {
  if (a.isActive === b.isActive) {
    return a.name.localeCompare(b.name);
  }
  return a.isActive ? -1 : 1;
});
---

<section class="projects crt" id="projects">
  <TerminalHeader title="PROJECTS.EXE" />
  <div class="terminal-content">
    <div class="projects-grid">
      {sortedProjects.map((project) => (
        <ProjectCard project={project} />
      ))}
    </div>
  </div>
</section>

<style>
  .projects {
    margin: 4rem 0;
    background: var(--color-bg-secondary);
    border: 2px solid var(--color-accent-purple);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 0 30px rgba(var(--accent), 0.1);
  }

  .terminal-content {
    padding: 2rem;
  }

  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 2rem;
    width: 100%;
    max-width: 1400px;
    margin: 0 auto;
  }

  @media (max-width: 768px) {
    .terminal-content {
      padding: 1rem;
    }

    .projects-grid {
      grid-template-columns: 1fr;
    }
  }
</style>