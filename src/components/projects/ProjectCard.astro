---
import type { Project } from '../../types/cv';
import ProjectCarousel from './ProjectCarousel.astro';
import CaseStudy from './CaseStudy.astro';

interface Props {
  project: Project;
}

const { project } = Astro.props;
---

<article class={`project-card ${project.isActive ? 'active' : ''}`} data-scroll>
  <div class="project-header">
    <div class="project-title">
      <h3>{project.name}</h3>
      {project.isActive && <span class="active-badge">Active</span>}
    </div>
    <div class="project-links">
      {project.url && (
        <a href={project.url} target="_blank" rel="noopener noreferrer" class="project-link demo">
          <span class="icon">ðŸ”—</span>
          Demo
        </a>
      )}
      {project.github && (
        <a href={project.github} target="_blank" rel="noopener noreferrer" class="project-link github">
          <span class="icon">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" width="16" height="16">
              <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
            </svg>
          </span>
          GitHub
        </a>
      )}
    </div>
  </div>

  {project.images && project.images.length > 0 && (
    <ProjectCarousel projectName={project.name} />
  )}

  <div class="project-content">
    <p class="project-description">{project.description}</p>

    {project.highlights && project.highlights.length > 0 && (
      <div class="project-highlights">
        <h4>Key Features</h4>
        <ul>
          {project.highlights.map(highlight => (
            <li>{highlight}</li>
          ))}
        </ul>
      </div>
    )}

    {project.technologies && project.technologies.length > 0 && (
      <div class="project-tech">
        <h4>Technologies</h4>
        <div class="tech-tags">
          {project.technologies.map(tech => (
            <span class="tech-tag">{tech}</span>
          ))}
        </div>
      </div>
    )}

    {project.caseStudy && (
      <CaseStudy {...project.caseStudy} />
    )}
  </div>
</article>

<style>
  .project-card {
    background: rgba(17, 17, 17, 0.4) !important;
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    border: 1px solid var(--color-accent-purple);
    border-radius: 12px;
    padding: 1.5rem;
    margin-bottom: 2rem;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 0;
    transform: translateY(20px);
    will-change: transform, opacity, background;
  }

  .project-card.visible {
    opacity: 1;
    transform: translateY(0);
  }

  .project-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(var(--accent), 0.2);
    background: rgba(17, 17, 17, 0.6) !important;
  }

  .project-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .project-title {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  h3 {
    margin: 0;
    font-size: 1.5rem;
    color: var(--color-accent-blue);
    text-shadow: 0 0 10px rgba(0, 240, 255, 0.5);
  }

  .active-badge {
    background: var(--color-accent-green);
    color: var(--color-bg-primary);
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.8rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .project-links {
    display: flex;
    gap: 1rem;
  }

  .project-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 6px;
    font-size: 0.9rem;
    text-decoration: none;
    transition: all 0.3s ease;
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
  }

  .project-link.demo {
    background: rgba(0, 240, 255, 0.2);
    color: var(--color-accent-blue);
    border: 1px solid var(--color-accent-blue);
  }

  .project-link.github {
    background: rgba(184, 41, 232, 0.2);
    color: var(--color-accent-purple);
    border: 1px solid var(--color-accent-purple);
  }

  .project-link:hover {
    transform: translateY(-2px);
    box-shadow: 0 2px 8px rgba(var(--accent-dark), 0.2);
  }

  .project-content {
    margin-top: 1.5rem;
  }

  .project-description {
    color: var(--color-text);
    line-height: 1.6;
    margin-bottom: 1.5rem;
  }

  .project-highlights h4,
  .project-tech h4 {
    color: var(--color-accent-purple);
    margin: 0 0 1rem;
    font-size: 1.1rem;
  }

  .project-highlights ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .project-highlights li {
    position: relative;
    padding-left: 1.5rem;
    margin-bottom: 0.5rem;
    color: var(--color-text);
  }

  .project-highlights li::before {
    content: 'â–¸';
    position: absolute;
    left: 0;
    color: var(--color-accent-purple);
  }

  .tech-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tech-tag {
    background: rgba(17, 17, 17, 0.3);
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    color: var(--color-accent-green);
    padding: 0.25rem 0.75rem;
    border-radius: 4px;
    font-size: 0.9rem;
    border: 1px solid var(--color-accent-green);
  }

  @media (max-width: 768px) {
    .project-card {
      padding: 1rem;
    }

    .project-header {
      flex-direction: column;
      align-items: flex-start;
    }

    .project-links {
      width: 100%;
      justify-content: space-between;
    }
  }
</style>

<script>
  function initScrollAnimation() {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
          observer.unobserve(entry.target);
        }
      });
    }, {
      threshold: 0.1,
      rootMargin: '0px'
    });

    document.querySelectorAll('.project-card[data-scroll]').forEach(card => {
      observer.observe(card);
    });
  }

  // Inicializar cuando la pÃ¡gina carga
  document.addEventListener('DOMContentLoaded', initScrollAnimation);
  document.addEventListener('astro:page-load', initScrollAnimation);
</script>