---
---

<form 
  name="contact" 
  method="POST" 
  data-netlify="true"
  netlify-honeypot="bot-field"
  action="/success"
  class="contact-form crt"
>
  <p class="hidden">
    <label>
      Don't fill this out if you're human: <input name="bot-field" />
    </label>
  </p>
  
  <input type="hidden" name="form-name" value="contact" />

  <div class="form-group">
    <label for="name">NAME:</label>
    <input 
      type="text" 
      id="name" 
      name="name" 
      required 
      placeholder="_"
    />
  </div>

  <div class="form-group">
    <label for="email">EMAIL:</label>
    <input 
      type="email" 
      id="email" 
      name="email" 
      required 
      placeholder="_"
    />
  </div>

  <div class="form-group">
    <label for="message">MESSAGE:</label>
    <textarea 
      id="message" 
      name="message" 
      required 
      rows="5" 
      placeholder="_"
    ></textarea>
  </div>

  <button type="submit" class="submit-btn">
    <span class="btn-text">SEND MESSAGE</span>
    <span class="btn-glitch"></span>
  </button>
</form>

<style>
  .contact-form {
    background: var(--color-bg-secondary);
    padding: 2rem;
    border-radius: 8px;
    border: 1px solid var(--color-accent-purple);
    max-width: 600px;
    width: 100%;
  }

  .form-group {
    margin-bottom: 1.5rem;
  }

  label {
    display: block;
    font-family: var(--font-heading);
    font-size: 0.8rem;
    color: var(--color-accent-green);
    margin-bottom: 0.5rem;
    text-shadow: var(--glow-green);
  }

  input, textarea {
    width: 100%;
    background: var(--color-bg-tertiary);
    border: 1px solid var(--color-accent-purple);
    color: var(--color-text);
    padding: 0.8rem;
    border-radius: 4px;
    font-family: var(--font-body);
    transition: all 0.3s ease;
  }

  input:focus, textarea:focus {
    outline: none;
    border-color: var(--color-accent-green);
    box-shadow: 0 0 10px var(--color-accent-green);
  }

  .submit-btn {
    position: relative;
    width: 100%;
    padding: 1rem;
    background: var(--color-bg-tertiary);
    border: 1px solid var(--color-accent-green);
    color: var(--color-accent-green);
    font-family: var(--font-heading);
    font-size: 0.9rem;
    cursor: pointer;
    overflow: hidden;
    transition: all 0.3s ease;
  }

  .submit-btn:hover {
    background: var(--color-accent-green);
    color: var(--color-bg-primary);
    box-shadow: 0 0 15px var(--color-accent-green);
  }

  .submit-btn:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }

  .btn-glitch {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--color-accent-green);
    transform: translateX(-100%);
    opacity: 0.3;
    pointer-events: none;
  }

  .submit-btn:hover .btn-glitch {
    animation: glitch-effect 0.3s linear infinite;
  }

  @keyframes glitch-effect {
    0% { transform: translateX(-100%); }
    50% { transform: translateX(0); }
    100% { transform: translateX(100%); }
  }

  .hidden {
    display: none;
  }

  @media (max-width: 768px) {
    .contact-form {
      padding: 1.5rem;
    }
  }
</style>

<script>
  // Obtener referencias a los elementos del formulario
  const form = document.querySelector('form');
  const submitBtn = form?.querySelector('.submit-btn');
  const btnText = submitBtn?.querySelector('.btn-text');

  if (form && submitBtn && btnText) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      // Deshabilitar el botón y mostrar estado de carga
      submitBtn.disabled = true;
      btnText.textContent = 'SENDING...';

      try {
        const formData = new FormData(form);
        
        const response = await fetch('/', {
          method: 'POST',
          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
          body: new URLSearchParams(formData).toString()
        });

        if (!response.ok) throw new Error('Network response was not ok');

        // Éxito - redirigir a la página de éxito
        window.location.href = '/success';

      } catch (error) {
        console.error('Error:', error);
        btnText.textContent = 'ERROR!';
        
        // Restaurar botón después de 3 segundos
        setTimeout(() => {
          submitBtn.disabled = false;
          btnText.textContent = 'SEND MESSAGE';
        }, 3000);
      }
    });
  }
</script>