---
interface Props {
  title: string;
  description?: string;
}

const { 
  title,
  description = "Full Stack Developer who loves to code and create unique digital experiences."
} = Astro.props;

// Schema.org para Rich Snippets
const schemaData = {
  "@context": "https://schema.org",
  "@type": "Person",
  "name": "Yeyobitz",
  "jobTitle": "Desarrollador Web Full Stack",
  "url": "https://yeyobitz.dev",
  "sameAs": [
    "https://github.com/yeyobitz",
    "https://www.linkedin.com/in/diego-qui%C3%B1ones-montecinos-650010249/://linkedin.com/in/yeyobitz"
  ],
  "description": description
};

import EasterEggs from '../components/EasterEggs.astro';
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://yeyobitz.dev/" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content="/og-image.jpg" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content="https://yeyobitz.dev/" />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content="/og-image.jpg" />
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="manifest" href="/site.webmanifest">
    <meta name="theme-color" content="#0a0a0a">
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@400;500;600&family=Press+Start+2P&display=swap" rel="stylesheet">
    
    <!-- Schema.org -->
    <script type="application/ld+json" set:html={JSON.stringify(schemaData)} />
    
    <meta name="generator" content={Astro.generator} />
  </head>
  <body>
    <div class="loading-screen" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-label="Cargando sitio">
      <div class="loading-content">
        <div class="loading-text" aria-live="polite">BOOTING SYSTEM</div>
        <div class="loading-progress">
          <div class="progress-bar"></div>
        </div>
        <div class="loading-status" aria-live="polite">
          <span class="prompt neon-green" aria-hidden="true">> </span>
          <span class="command-text"></span>
          <span class="cursor" aria-hidden="true">_</span>
        </div>
      </div>
    </div>
    <div class="crt-overlay" aria-hidden="true"></div>
    
    <header>
      <nav aria-label="Navegación principal">
        <div class="nav-content">
          <div class="nav-links left">
            <a href="#about" class="nav-link neon glitch" data-glitch="About me">About me</a>
            <a href="#skills" class="nav-link neon glitch" data-glitch="Skills">Skills</a>
          </div>
          <a href="/" class="logo neon-green glitch" data-glitch="YEYOBITZ" aria-label="Inicio">YEYOBITZ</a>
          <div class="nav-links right">
            <a href="#projects" class="nav-link neon glitch" data-glitch="Projects">Projects</a>
            <a href="#contact" class="nav-link neon glitch" data-glitch="Contact">Contact</a>
          </div>
          <button class="menu-toggle" aria-label="Abrir menú" aria-expanded="false" aria-controls="mobile-menu">
            <span class="menu-line"></span>
            <span class="menu-line"></span>
            <span class="menu-line"></span>
          </button>
        </div>
        <div id="mobile-menu" class="mobile-menu" aria-hidden="true">
          <div class="mobile-menu-content">
            <a href="#about" class="mobile-nav-link neon glitch" data-glitch="About">About me</a>
            <a href="#skills" class="mobile-nav-link neon glitch" data-glitch="Skills">Skills</a>
            <a href="#projects" class="mobile-nav-link neon glitch" data-glitch="Projects">Projects</a>
            <a href="#contact" class="mobile-nav-link neon glitch" data-glitch="Contact">Contact</a>
          </div>
        </div>
      </nav>
    </header>

    <div class="content-wrapper">
      <main id="main-content" class="power-on">
        <slot />
      </main>
      
      <footer class="retro-footer" role="contentinfo">
        <div class="footer-grid" aria-hidden="true"></div>
        <div class="footer-scanlines" aria-hidden="true"></div>
        <div class="footer-content">
          <div class="footer-section">
            <div class="terminal-text">
              <span class="prompt neon-white" aria-hidden="true">> </span>
              <span class="command">status</span>
            </div>
            <div class="status-line">
              <span class="label">SYSTEM</span>
              <span class="dots"></span>
              <span class="value neon-green">ONLINE</span>
            </div>
            <div class="status-line">
              <span class="label">UPTIME</span>
              <span class="dots"></span>
              <span class="value neon-blue">{new Date().getFullYear() - 2023}Y</span>
            </div>
          </div>

          <div class="footer-divider" role="separator"></div>

          <div class="footer-section">
            <p class="copyright">
              <span class="neon-white" aria-hidden="true">[</span> 
              <span class="neon-purple">©{new Date().getFullYear()}</span> 
              <span class="neon-blue">YEYOBITZ</span> 
              <span class="neon-white" aria-hidden="true">]</span>
            </p>
            <p class="credits neon-green">All systems operational</p>
            <p class="secret-hint">↑↑↓↓←→←→BA</p>
          </div>
        </div>
      </footer>
    </div>

    <!-- Easter Egg Overlay -->
    <div class="easter-egg-overlay" aria-hidden="true">
      <div class="scanlines"></div>
      <div class="crt-effect"></div>
      <div class="glitch-text">KONAMI CODE ACTIVATED</div>
    </div>
  </body>
</html>

<script>
  // Loading Screen Logic
  const loadingScreen = document.querySelector('.loading-screen');
  const commandText = document.querySelector('.command-text');
  const loadingMessages = [
    'Iniciando...',
    'Cargando...',
    'Listo!'
  ];

  let currentMessage = 0;

  function updateLoadingProgress(progress) {
    loadingScreen?.setAttribute('aria-valuenow', progress.toString());
  }

  function typeMessage(message) {
    let i = 0;
    commandText.textContent = '';
    
    function type() {
      if (i < message.length) {
        commandText.textContent += message.charAt(i);
        i++;
        updateLoadingProgress(Math.floor((i / message.length) * 100));
        setTimeout(type, 30);
      } else if (currentMessage < loadingMessages.length - 1) {
        currentMessage++;
        setTimeout(() => {
          typeMessage(loadingMessages[currentMessage]);
        }, 300);
      } else {
        setTimeout(() => {
          loadingScreen?.classList.add('hidden');
          document.body.classList.add('loaded');
          localStorage.setItem('loadingShown', 'true');
        }, 300);
      }
    }
    
    type();
  }

  // Iniciar la animación solo si es primera visita
  document.addEventListener('DOMContentLoaded', () => {
    const hasSeenLoading = localStorage.getItem('loadingShown');
    
    if (!hasSeenLoading) {
      typeMessage(loadingMessages[0]);
    } else {
      loadingScreen?.classList.add('hidden');
      document.body.classList.add('loaded');
    }
  });

  // Variables para el menú móvil
  const menuToggle = document.querySelector('.menu-toggle');
  const mobileMenu = document.querySelector('.mobile-menu');
  const mobileLinks = document.querySelectorAll('.mobile-nav-link');
  
  // Toggle del menú móvil
  function toggleMenu() {
    const isExpanded = menuToggle.getAttribute('aria-expanded') === 'true';
    menuToggle.setAttribute('aria-expanded', (!isExpanded).toString());
    menuToggle.setAttribute('aria-label', isExpanded ? 'Abrir menú' : 'Cerrar menú');
    
    mobileMenu.setAttribute('aria-hidden', isExpanded.toString());
    menuToggle.classList.toggle('active');
    mobileMenu.classList.toggle('active');
    document.body.classList.toggle('menu-open');

    // Manejar el foco
    if (!isExpanded) {
      // Cuando se abre el menú, enfocar el primer link
      mobileLinks[0]?.focus();
    } else {
      // Cuando se cierra, devolver el foco al botón
      menuToggle?.focus();
    }
  }
  
  // Event listeners
  menuToggle?.addEventListener('click', toggleMenu);
  
  // Manejar navegación por teclado en el menú móvil
  mobileMenu?.addEventListener('keydown', (e) => {
    const focusableElements = Array.from(mobileLinks);
    const firstFocusable = focusableElements[0];
    const lastFocusable = focusableElements[focusableElements.length - 1];
    const isTabPressed = e.key === 'Tab';
    
    if (!isTabPressed) return;

    if (e.shiftKey) {
      if (document.activeElement === firstFocusable) {
        lastFocusable?.focus();
        e.preventDefault();
      }
    } else {
      if (document.activeElement === lastFocusable) {
        firstFocusable?.focus();
        e.preventDefault();
      }
    }
  });
  
  // Cerrar menú al hacer click en un link
  mobileLinks.forEach(link => {
    link.addEventListener('click', () => {
      toggleMenu();
      // Esperar a que termine la animación antes de hacer scroll
      setTimeout(() => {
        const targetId = link.getAttribute('href');
        const targetElement = document.querySelector(targetId);
        if (targetElement) {
          toggleSection(targetElement, false);
        }
      }, 300);
    });
  });

  // Función para minimizar/maximizar sección
  function toggleSection(section, shouldMinimize) {
    if (!section) return;
    const button = section.querySelector('.minimize-btn');
    
    if (shouldMinimize) {
      section.classList.add('minimized');
      button?.classList.add('active');
    } else {
      section.classList.remove('minimized');
      button?.classList.remove('active');
      
      // Reiniciar las animaciones
      section.style.animation = 'none';
      section.offsetHeight; // Forzar reflow
      section.style.animation = null;

      // Hacer scroll a la sección
      const navbarHeight = document.querySelector('nav').offsetHeight;
      const targetPosition = section.getBoundingClientRect().top + window.pageYOffset;
      
      window.scrollTo({
        top: targetPosition - navbarHeight - 20,
        behavior: 'smooth'
      });
    }
  }

  // Manejar el scroll suave y offset de la navbar
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const targetId = this.getAttribute('href');
      if (targetId === '#') return;

      const targetElement = document.querySelector(targetId);
      if (targetElement) {
        // Primero maximizamos la sección
        toggleSection(targetElement, false);
      }
    });
  });

  // Manejar cambios en el hash de la URL
  function handleHashChange() {
    const hash = window.location.hash;
    if (hash) {
      const targetSection = document.querySelector(hash);
      if (targetSection) {
        toggleSection(targetSection, false);
      }
    }
  }

  // Escuchar cambios en el hash de la URL
  window.addEventListener('hashchange', handleHashChange);
  
  // Manejar hash inicial al cargar la página
  if (window.location.hash) {
    handleHashChange();
  }

  // Easter Egg Logic
  const easterEggSound = new Audio('/sounds/easteregg.mp3');
  easterEggSound.volume = 0.5;
  easterEggSound.preload = 'auto';

  const konamiCode = [
    'ArrowUp', 'ArrowUp',
    'ArrowDown', 'ArrowDown',
    'ArrowLeft', 'ArrowRight',
    'ArrowLeft', 'ArrowRight',
    'b', 'a'
  ];
  let konamiIndex = 0;

  const chaosClasses = ['chaos-mode', 'chaos-mode-reverse', 'chaos-mode-delayed'];

  async function handleKonami() {
    // Iniciar la música inmediatamente
    easterEggSound.currentTime = 0;
    const playPromise = easterEggSound.play();

    // Guardar la posición actual del scroll
    const scrollPos = window.scrollY;
    
    // Bloquear el scroll
    document.body.style.position = 'fixed';
    document.body.style.top = `-${scrollPos}px`;
    document.body.style.width = '100%';

    // Aplicar todos los efectos de una sola vez
    const overlay = document.querySelector('.easter-egg-overlay');
    const mainContent = document.querySelector('main');
    const elements = document.querySelectorAll('section, .project-card, .terminal-section, .hero-content');
    
    requestAnimationFrame(() => {
      // Activar overlay
      overlay?.classList.add('active');
      
      // Hacer que el contenido principal se aleje
      if (mainContent) {
        mainContent.style.transform = 'scale(0.95) translateZ(-100px)';
        mainContent.style.filter = 'blur(2px)';
        mainContent.style.transition = 'all 0.3s ease';
      }

      // Aplicar efectos de caos
      document.body.style.animation = 'glitchEffect 0.5s infinite';
      elements.forEach(element => {
        element.classList.add(chaosClasses[Math.floor(Math.random() * chaosClasses.length)]);
      });
    });

    // Limpiar todo después de 7 segundos
    setTimeout(() => {
      requestAnimationFrame(() => {
        overlay?.classList.remove('active');
        document.body.style.animation = '';
        
        // Restaurar el contenido principal
        if (mainContent) {
          mainContent.style.transform = '';
          mainContent.style.filter = '';
        }

        elements.forEach(element => {
          chaosClasses.forEach(className => element.classList.remove(className));
        });
        easterEggSound.pause();
        easterEggSound.currentTime = 0;

        // Restaurar el scroll
        document.body.style.position = '';
        document.body.style.top = '';
        document.body.style.width = '';
        window.scrollTo(0, scrollPos);
      });
    }, 7000);

    // Manejar errores de reproducción sin bloquear la animación
    playPromise?.catch(error => {
      console.log('Error al reproducir sonido:', error);
    });
  }

  // Optimizar el detector de teclas
  const keyHandler = (e) => {
    if (e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement) return;
    
    if (e.key.toLowerCase() === konamiCode[konamiIndex].toLowerCase()) {
      if (++konamiIndex === konamiCode.length) {
        konamiIndex = 0;
        handleKonami();
      }
    } else {
      konamiIndex = 0;
    }
  };

  document.addEventListener('keydown', keyHandler);
  document.addEventListener('astro:page-load', () => konamiIndex = 0);
</script>

<style is:global>
  @import '../styles/main.css';

  html {
    scroll-padding-top: 5rem;
  }

  body {
    margin: 0;
    padding: 0;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    overflow-y: auto;
    background: var(--color-bg-primary);
  }

  .crt-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 9998;
  }

  .crt-overlay::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(
      circle at center,
      transparent 50%,
      rgba(0, 0, 0, 0.15) 150%
    );
  }

  .crt-overlay::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
      0deg,
      transparent 0%,
      rgba(0, 0, 0, 0.1) 50%,
      transparent 100%
    );
    background-size: 100% 4px;
    animation: scanlineMove 10s linear infinite;
  }

  .content-wrapper {
    flex: 1;
    padding-top: 3.5rem;
    position: relative;
    z-index: 1;
  }

  /* Navigation Styles */
  nav {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    background: rgba(26, 26, 26, 0.95);
    backdrop-filter: blur(10px);
    z-index: 9999;
    padding: 0.5rem 0;
    border-bottom: 1px solid var(--color-accent-green);
  }

  .nav-content {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    align-items: center;
    max-width: var(--container-width);
    margin: 0 auto;
    padding: 0 var(--container-padding);
    gap: var(--space-md);
  }

  .nav-links {
    display: flex;
    gap: var(--space-md);
    align-items: center;
  }

  .nav-links.left {
    grid-column: 1;
    justify-content: flex-end;
  }

  .nav-links.right {
    grid-column: 3;
    justify-content: flex-start;
  }

  .nav-link {
    color: var(--color-text);
    text-decoration: none;
    font-family: var(--font-heading);
    font-size: 0.6rem;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    transition: all 0.3s ease;
    position: relative;
    background: var(--color-bg-secondary);
    border: 1px solid transparent;
    white-space: nowrap;
  }

  .nav-link:hover {
    color: var(--color-accent-green);
    text-shadow: var(--glow-green);
    border-color: var(--color-accent-green);
    box-shadow: 0 0 10px rgba(0, 255, 65, 0.2);
    transform: translateY(-1px);
  }

  .logo {
    font-family: var(--font-heading);
    font-size: var(--font-size-base);
    color: var(--color-accent-green);
    text-decoration: none;
    text-shadow: var(--glow-green);
    transition: all 0.3s ease;
    grid-column: 2;
    text-align: center;
    margin: 0 1rem;
  }

  .logo:hover {
    color: var(--color-accent-blue);
    text-shadow: var(--glow-blue);
    transform: scale(1.05);
  }

  @media (max-width: 768px) {
    .nav-links {
      gap: var(--space-xs);
    }
    
    .nav-link {
      font-size: 0.5rem;
      padding: 0.2rem 0.4rem;
    }
    
    .logo {
      font-size: var(--font-size-sm);
    }
  }

  @media (max-width: 480px) {
    .nav-content {
      padding: 0 var(--space-xs);
      gap: var(--space-xs);
    }

    .nav-link {
      font-size: 0.45rem;
      padding: 0.15rem 0.3rem;
    }
  }

  @keyframes scanlineMove {
    from {
      transform: translateY(-100%);
    }
    to {
      transform: translateY(100%);
    }
  }

  /* Glitch effect para los botones */
  .glitch {
    position: relative;
    transition: all 0.3s ease;
  }

  .glitch:hover {
    animation: textFlicker 0.2s infinite;
  }

  .glitch:hover::before,
  .glitch:hover::after {
    content: attr(data-glitch);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: transparent;
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    animation: chromaOffset 3s infinite linear alternate-reverse;
  }

  .glitch:hover::before {
    color: #0ff;
    left: -2px;
    animation: glitchBefore 2s infinite;
  }

  .glitch:hover::after {
    color: #f0f;
    left: 2px;
    animation: glitchAfter 2.5s infinite;
  }

  @keyframes chromaOffset {
    0%, 95% {
      clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    }
    96%, 97% {
      clip-path: polygon(0 15%, 100% 15%, 100% 85%, 0 85%);
    }
    98%, 100% {
      clip-path: polygon(0 10%, 100% 10%, 100% 90%, 0 90%);
    }
  }

  @keyframes textFlicker {
    0%, 95% {
      opacity: 1;
    }
    96%, 97% {
      opacity: 0.8;
    }
    98%, 100% {
      opacity: 0.9;
    }
  }

  @keyframes glitchBefore {
    0%, 95% {
      transform: translate(0);
    }
    96%, 97% {
      transform: translate(-2px, 2px);
    }
    98%, 100% {
      transform: translate(2px, -2px);
    }
  }

  @keyframes glitchAfter {
    0%, 95% {
      transform: translate(0);
    }
    96%, 97% {
      transform: translate(2px, -2px);
    }
    98%, 100% {
      transform: translate(-2px, 2px);
    }
  }

  /* Footer Styles */
  .retro-footer {
    position: relative;
    background: var(--color-bg-tertiary);
    padding: 2rem 0;
    margin-top: 4rem;
    overflow: hidden;
    border-top: 1px solid var(--color-accent-blue);
  }

  .footer-grid {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
      linear-gradient(90deg, rgba(255, 255, 255, 0.05) 1px, transparent 1px),
      linear-gradient(rgba(255, 255, 255, 0.05) 1px, transparent 1px);
    background-size: 20px 20px;
    opacity: 0.2;
  }

  .footer-scanlines {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
      0deg,
      rgba(255, 255, 255, 0.05) 0px,
      rgba(255, 255, 255, 0.05) 1px,
      transparent 1px,
      transparent 2px
    );
    pointer-events: none;
    animation: scanline 10s linear infinite;
  }

  .footer-content {
    position: relative;
    max-width: var(--container-width);
    margin: 0 auto;
    padding: 0 var(--container-padding);
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 2rem;
    z-index: 2;
  }

  .footer-section {
    flex: 1;
  }

  .terminal-text {
    font-family: var(--font-mono);
    margin-bottom: 1rem;
  }

  .prompt {
    font-weight: bold;
  }

  .command {
    color: var(--color-text);
    opacity: 0.8;
  }

  .status-line {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin: 0.5rem 0;
    font-family: var(--font-mono);
  }

  .label {
    color: var(--color-text);
    opacity: 0.7;
    min-width: 80px;
  }

  .dots {
    flex: 1;
    border-bottom: 1px dotted rgba(255, 255, 255, 0.2);
    margin: 0 0.5rem;
  }

  .value {
    font-weight: bold;
  }

  .footer-divider {
    width: 1px;
    height: 80px;
    background: linear-gradient(
      to bottom,
      transparent,
      var(--color-accent-blue),
      transparent
    );
  }

  .copyright {
    font-family: var(--font-mono);
    text-align: right;
    margin-bottom: 0.5rem;
  }

  .credits {
    font-family: var(--font-mono);
    text-align: right;
    opacity: 0.8;
  }

  .neon-white {
    color: #fff;
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
  }

  @keyframes scanline {
    0% {
      transform: translateY(0);
    }
    100% {
      transform: translateY(20px);
    }
  }

  @media (max-width: 768px) {
    .footer-content {
      flex-direction: column;
      text-align: center;
      gap: 1.5rem;
    }

    .footer-divider {
      width: 80%;
      height: 1px;
      margin: 0 auto;
    }

    .status-line {
      justify-content: center;
    }

    .copyright, .credits {
      text-align: center;
    }
  }

  /* Menú Toggle */
  .menu-toggle {
    display: none;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    position: relative;
    z-index: 10000;
  }

  .menu-line {
    display: block;
    width: 25px;
    height: 2px;
    margin: 5px 0;
    background-color: var(--color-accent-green);
    transition: all 0.3s ease;
    box-shadow: 0 0 5px var(--color-accent-green);
  }

  /* Mobile Menu */
  .mobile-menu {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background: rgba(0, 0, 0, 0.95);
    backdrop-filter: blur(10px);
    z-index: 9998;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  .mobile-menu.active {
    opacity: 1;
    visibility: visible;
  }

  .mobile-menu-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
    gap: 2rem;
    padding: 2rem;
  }

  .mobile-nav-link {
    color: var(--color-text);
    text-decoration: none;
    font-family: var(--font-heading);
    font-size: 1.5rem;
    padding: 0.5rem 1rem;
    border: 1px solid transparent;
    transition: all 0.3s ease;
    position: relative;
  }

  .mobile-nav-link:hover {
    color: var(--color-accent-green);
    text-shadow: var(--glow-green);
    border-color: var(--color-accent-green);
    transform: scale(1.1);
  }

  /* Media Queries */
  @media (max-width: 768px) {
    .nav-links {
      display: none;
    }

    .menu-toggle {
      display: block;
      position: absolute;
      right: 1rem;
      top: 50%;
      transform: translateY(-50%);
    }

    .menu-toggle.active .menu-line:nth-child(1) {
      transform: rotate(45deg) translate(5px, 5px);
    }

    .menu-toggle.active .menu-line:nth-child(2) {
      opacity: 0;
    }

    .menu-toggle.active .menu-line:nth-child(3) {
      transform: rotate(-45deg) translate(7px, -6px);
    }

    .mobile-menu {
      display: block;
    }

    .nav-content {
      grid-template-columns: auto auto;
    }

    .logo {
      grid-column: 1;
      text-align: left;
    }
  }

  /* Loading Screen */
  .loading-screen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--color-bg-primary);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 10000;
    opacity: 1;
    visibility: visible;
    transition: opacity 0.5s ease, visibility 0.5s ease;
  }

  .loading-screen.hidden {
    opacity: 0;
    visibility: hidden;
  }

  .loading-content {
    text-align: center;
    font-family: var(--font-mono);
    color: var(--color-accent-green);
  }

  .loading-text {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    text-shadow: var(--glow-green);
    animation: textFlicker 0.5s infinite;
  }

  .loading-progress {
    width: 300px;
    height: 2px;
    background: rgba(0, 255, 65, 0.2);
    margin: 1rem auto;
    position: relative;
    overflow: hidden;
  }

  .progress-bar {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 0%;
    background: var(--color-accent-green);
    box-shadow: 0 0 10px var(--color-accent-green);
    animation: loadProgress 1s ease-out forwards;
  }

  .loading-status {
    font-size: 1rem;
    height: 1.2em;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
  }

  .command-text {
    min-width: 10ch;
    text-align: left;
  }

  .cursor {
    animation: cursorBlink 1s infinite;
  }

  @keyframes loadProgress {
    0% { width: 0%; }
    100% { width: 100%; }
  }

  @keyframes cursorBlink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
  }

  .secret-hint {
    font-family: var(--font-mono);
    font-size: 0.6rem;
    opacity: 0.1;
    text-align: right;
    margin-top: 0.25rem;
    color: var(--color-accent-blue);
    transition: opacity 0.3s ease;
  }

  .secret-hint:hover {
    opacity: 0.3;
  }

  /* Easter Egg Styles */
  .easter-egg-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    z-index: 9999;
    display: none;
    pointer-events: none;
    align-items: center;
    justify-content: center;
  }

  .easter-egg-overlay.active {
    display: flex !important;
    will-change: opacity;
    animation: overlayIn 0.2s ease-out forwards;
  }

  .scanlines {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to bottom,
      transparent 50%,
      rgba(0, 255, 65, 0.1) 50%
    );
    background-size: 100% 4px;
    animation: scanlines 0.5s linear infinite;
    mix-blend-mode: overlay;
  }

  .crt-effect {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    animation: crtEffect 0.15s infinite;
    mix-blend-mode: screen;
  }

  .glitch-text {
    position: fixed;
    left: 50%;
    top: 50vh;
    transform: translate(-50%, -50%);
    font-family: var(--font-heading);
    font-size: min(2.5rem, 8vw);
    color: var(--color-accent-green);
    text-shadow: 
      2px 2px var(--color-accent-blue),
      -2px -2px var(--color-accent-purple);
    animation: glitchText 0.5s infinite;
    z-index: 10000;
    text-align: center;
    background: rgba(0, 0, 0, 0.9);
    padding: min(1.5rem, 4vw);
    border-radius: 1rem;
    box-shadow: 
      0 0 50px rgba(0, 255, 65, 0.5),
      0 0 100px rgba(0, 255, 65, 0.3),
      inset 0 0 20px rgba(0, 255, 65, 0.3);
    white-space: nowrap;
    margin: 0;
    line-height: 1;
    backdrop-filter: blur(5px);
  }

  /* Chaos Effect Classes */
  .chaos-mode {
    animation: chaosRotate 0.5s linear infinite !important;
    transform-origin: center center;
    will-change: transform;
    backface-visibility: hidden;
    perspective: 1000px;
    position: relative;
    z-index: 100;
  }

  .chaos-mode-reverse {
    animation: chaosRotateReverse 0.7s linear infinite !important;
    transform-origin: center center;
    will-change: transform;
    backface-visibility: hidden;
    perspective: 1000px;
    position: relative;
    z-index: 100;
  }

  .chaos-mode-delayed {
    animation: chaosRotate 0.6s linear infinite !important;
    animation-delay: 0.2s !important;
    transform-origin: center center;
    will-change: transform;
    backface-visibility: hidden;
    perspective: 1000px;
    position: relative;
    z-index: 100;
  }

  /* Animations */
  @keyframes overlayIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
  }

  @keyframes scanlines {
    0% { transform: translateY(0); }
    100% { transform: translateY(4px); }
  }

  @keyframes crtEffect {
    0% {
      background: 
        radial-gradient(circle at center, transparent 50%, rgba(0, 0, 0, 0.5) 100%),
        linear-gradient(90deg, rgba(255, 0, 0, 0.1), rgba(0, 255, 0, 0.1), rgba(0, 0, 255, 0.1));
    }
    50% {
      background: 
        radial-gradient(circle at center, rgba(0, 0, 0, 0.5) 50%, transparent 100%),
        linear-gradient(90deg, rgba(0, 0, 255, 0.1), rgba(255, 0, 0, 0.1), rgba(0, 255, 0, 0.1));
    }
    100% {
      background: 
        radial-gradient(circle at center, transparent 50%, rgba(0, 0, 0, 0.5) 100%),
        linear-gradient(90deg, rgba(0, 255, 0, 0.1), rgba(0, 0, 255, 0.1), rgba(255, 0, 0, 0.1));
    }
  }

  @keyframes glitchText {
    0%, 100% {
      text-shadow: 
        2px 2px var(--color-accent-blue),
        -2px -2px var(--color-accent-purple);
    }
    25% {
      text-shadow: 
        -2px 2px var(--color-accent-purple),
        2px -2px var(--color-accent-blue);
    }
    50% {
      text-shadow: 
        2px -2px var(--color-accent-blue),
        -2px 2px var(--color-accent-purple);
    }
    75% {
      text-shadow: 
        -2px -2px var(--color-accent-purple),
        2px 2px var(--color-accent-blue);
    }
  }

  @keyframes chaosRotate {
    0% { transform: rotate(0deg) scale(1) translateZ(0); }
    25% { transform: rotate(180deg) scale(1.2) translateZ(0); }
    50% { transform: rotate(360deg) scale(0.8) translateZ(0); }
    75% { transform: rotate(540deg) scale(1.2) translateZ(0); }
    100% { transform: rotate(720deg) scale(1) translateZ(0); }
  }

  @keyframes chaosRotateReverse {
    0% { transform: rotate(720deg) scale(1) translateZ(0); }
    25% { transform: rotate(540deg) scale(1.2) translateZ(0); }
    50% { transform: rotate(360deg) scale(0.8) translateZ(0); }
    75% { transform: rotate(180deg) scale(1.2) translateZ(0); }
    100% { transform: rotate(0deg) scale(1) translateZ(0); }
  }

  @keyframes glitchEffect {
    0%, 100% { transform: translate(0); filter: hue-rotate(0deg); }
    25% { transform: translate(2px, 2px); filter: hue-rotate(90deg); }
    50% { transform: translate(-2px, -2px); filter: hue-rotate(180deg); }
    75% { transform: translate(2px, -2px); filter: hue-rotate(270deg); }
  }
</style>